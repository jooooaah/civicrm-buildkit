#!/bin/bash
set -e

## Example usage:
##
## $ env CIVIVER=5.59 SUITES=phpunit-e2e BLDTYPE='drupal9-clean_9.4.x-dev' run-bknix-job --mock max CiviCRM-D8-Matrix

#################################################
## Environment variables

## EXECUTOR_NUMBER: The number of this concurrent process
## WORKSPACE: The path where Jenkins stores data for this job
## CIVIVER: The version of CiviCRM to install, expressed as a branch or tag (e.g. `master`, `5.59`, `5.57.0`)
## SUITES: Space-limited list of test-suites (e.g. `phpunit-e2e phpunit-civi`)
## BLDTYPE: Name of the civibuild configuration to use. Optionally append version. (e.g. `drupal9-clean_9.4.x-dev`)
assert_common EXECUTOR_NUMBER WORKSPACE CIVIVER SUITES

## Optionally peg to a specific CMS version
CMS_REGEX="([a-z0-9\-]+)_([a-z0-9\-\.]+)"
if [[ $BLDTYPE =~ $CMS_REGEX ]]; then
  BLDTYPE="${BASH_REMATCH[1]}"
  CMSVER_OPT="--cms-ver ${BASH_REMATCH[2]}"
else
  CMSVER_OPT=""
fi

#################################################
## Main

use_bknix_tmp

BLDNAME="build-$EXECUTOR_NUMBER"

## Reset (cleanup after previous tests)
clean_legacy_workspace "$WORKSPACE/junit" "$WORKSPACE/civibuild-html" "$WORKSPACE/last-scan.json" "$WORKSPACE/new-scan.json"
init_std_workspace
if [ -d "$BKITBLD/$BLDNAME" ]; then
  echo y | civibuild destroy "$BLDNAME"
fi

## Report details about the test environment
civibuild env-info

## Download application (with civibuild)
civibuild download "$BLDNAME" \
  --civi-ver "$CIVIVER" $CMSVER_OPT \
  --type "$BLDTYPE"

## Install application (with civibuild)
civibuild install "$BLDNAME" \
  --admin-pass "n0ts3cr3t"

## Report details about this build of the application
civibuild show "$BLDNAME" \
  --html "$WORKSPACE_HTML" \
  --last-scan "$WORKSPACE_BUILD/last-scan.json" \
  --new-scan "$WORKSPACE_BUILD/new-scan.json"
cp "$WORKSPACE_BUILD/new-scan.json" "$WORKSPACE_BUILD/last-scan.json"

## Execute tests
civi-test-run -b "$BLDNAME" -j "$WORKSPACE_JUNIT" $SUITES
exit $?
